import { forwardRef, useEffect, useRef, useState } from "react";
import "./Header.css";
import classNames from "classnames";
import SmoothScrollbar from "smooth-scrollbar";

export const Header = forwardRef((props, ref) => {
  const { appRef, introRef, productsRef, areasRef, servicesRef, contactRef } = ref;
  const [isTransparent, setTransparentStatus] = useState(true);
  const [isVisible, setIsVisible] = useState(true);
  const [isMenuVisible, setMenuVisibility] = useState(false);
  const menuRef = useRef();
  const handleAboutLinkClick = (e) => {
    setTransparentStatus(false);
    const scrollbar = SmoothScrollbar.get(appRef.current);
    scrollbar.scrollTo(0, introRef.current.offsetTop - 150, 700);
  };

  const handleDevelopmentLinkClick = (e) => {
    setTransparentStatus(false);
    const scrollbar = SmoothScrollbar.get(appRef.current);
    scrollbar.scrollTo(0, productsRef.current.offsetTop - 150, 700);
  };

  const handleMarketingLinkClick = (e) => {
    setTransparentStatus(false);
    const scrollbar = SmoothScrollbar.get(appRef.current);
    scrollbar.scrollTo(0, areasRef.current.offsetTop - 150, 700);
  };

  const handleConsultationsLinkClick = (e) => {
    setTransparentStatus(false);
    const scrollbar = SmoothScrollbar.get(appRef.current);
    scrollbar.scrollTo(0, servicesRef.current.offsetTop - 150, 700);
  };
  const handleContactLinkClick = (e) => {
    setTransparentStatus(false);
    const scrollbar = SmoothScrollbar.get(appRef.current);
    scrollbar.scrollTo(0, contactRef.current.offsetTop - 150, 700);
  };

  const handleCloseMenu = () => {
    if (window.innerWidth > 1020) {
      setMenuVisibility(false);
      setTransparentStatus(false);
    }
  };

  const handleScroll = (e) => {
    const scrollbar = SmoothScrollbar.get(appRef.current);
    if (window.innerWidth > 1020) {
      if (scrollbar.scrollTop > 100) {
        setTransparentStatus(false);
      } else {
        setTransparentStatus(true);
      }

      if (e.deltaY > 0) {
        setIsVisible(false);
      } else {
        setIsVisible(true);
      }
    } else {
      setTransparentStatus(false);
      setMenuVisibility(false);
    }
  };

  useEffect(() => {
    if (window.innerWidth < 1020) {
      setTransparentStatus(false);
    }
    window.addEventListener("resize", handleCloseMenu);
    window.addEventListener("wheel", handleScroll);
    return () => {
      window.removeEventListener("wheel", handleScroll);
      window.removeEventListener("resize", handleCloseMenu);
    };
  }, []);

  return (
    <>
      <header className={classNames("header", { transparent: isTransparent }, { visible: isVisible })}>
        <div className="header__inner">
          <div className="header__logo" onClick={() => SmoothScrollbar.get(appRef.current).scrollTo(0, 0, 700)}>
            <svg width="163" height="53" viewBox="0 0 163 53" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M43.4371 14.6005C43.2204 14.2657 42.6917 13.7037 40.6536 11.6656C38.6154 9.62748 38.0534 9.09874 37.7186 8.882C35.3164 7.32695 32.0965 8.18972 30.7937 10.7375C30.6121 11.0926 30.3898 11.8315 29.6438 14.6157C28.8978 17.3998 28.7208 18.1509 28.7006 18.5492C28.5549 21.4071 30.9121 23.7642 33.77 23.6186C34.1683 23.5983 34.9194 23.4214 37.7035 22.6754C40.4876 21.9294 41.2265 21.7071 41.5816 21.5255C44.1294 20.2226 44.9922 17.0027 43.4371 14.6005ZM33.9666 27.4775C34.8855 27.4307 36.1582 27.0897 38.7035 26.4077C41.2489 25.7256 42.5215 25.3846 43.3408 24.9657C47.9269 22.6206 49.4799 16.8248 46.6808 12.5008C46.1807 11.7284 45.2491 10.7967 43.3858 8.93339C41.5224 7.07007 40.5908 6.13842 39.8184 5.63839C35.4944 2.8393 29.6986 4.39227 27.3535 8.97835C26.9345 9.7976 26.5935 11.0703 25.9115 13.6156C25.2295 16.1609 24.8885 17.4336 24.8416 18.3526C24.5795 23.4968 28.8224 27.7396 33.9666 27.4775Z"
                fill="white"
              />
              <path
                d="M31.824 41.3401C31.2112 39.0861 30.9048 37.9592 30.9257 37.1448C31.0019 34.1894 33.3798 31.8116 36.3352 31.7354C37.1495 31.7144 38.2765 32.0208 40.5304 32.6337C42.7597 33.2398 43.8743 33.5428 44.5629 33.9699C47.0607 35.5193 47.919 38.7464 46.521 41.3319C46.1356 42.0446 45.3188 42.8614 43.6853 44.495C42.0518 46.1285 41.235 46.9453 40.5222 47.3306C37.9367 48.7287 34.7096 47.8703 33.1603 45.3725C32.7332 44.6839 32.4301 43.5693 31.824 41.3401Z"
                fill="white"
              />
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M13.9616 44.0768C13.6268 43.8601 13.0648 43.3313 11.0267 41.2932C8.98857 39.2551 8.45983 38.6931 8.24309 38.3583C6.68803 35.9561 7.5508 32.7362 10.0986 31.4333C10.4537 31.2517 11.1926 31.0294 13.9767 30.2834C16.7609 29.5374 17.5119 29.3605 17.9103 29.3402C20.7682 29.1946 23.1253 31.5517 22.9797 34.4096C22.9594 34.8079 22.7825 35.559 22.0365 38.3431C21.2905 41.1272 21.0681 41.8661 20.8866 42.2213C19.5837 44.7691 16.3638 45.6318 13.9616 44.0768ZM26.8386 34.6062C26.7918 35.5252 26.4508 36.7979 25.7687 39.3432C25.0867 41.8885 24.7457 43.1612 24.3268 43.9804C21.9817 48.5665 16.1859 50.1195 11.8619 47.3204C11.0894 46.8204 10.1578 45.8887 8.29447 44.0254C6.43116 42.1621 5.4995 41.2304 4.99947 40.458C2.20038 36.134 3.75336 30.3382 8.33943 27.9931C9.15868 27.5742 10.4313 27.2332 12.9767 26.5511C15.522 25.8691 16.7947 25.5281 17.7137 25.4813C22.8579 25.2192 27.1007 29.462 26.8386 34.6062Z"
                fill="white"
              />
              <path
                d="M10.8093 20.3254C13.0633 20.9382 14.1902 21.2447 15.0046 21.2237C17.96 21.1475 20.3379 18.7697 20.414 15.8142C20.435 14.9999 20.1286 13.8729 19.5158 11.619C18.9096 9.38973 18.6066 8.27511 18.1795 7.58654C16.6302 5.08873 13.4031 4.23039 10.8175 5.62841C10.1048 6.0138 9.288 6.83057 7.65446 8.46411C6.02093 10.0976 5.20416 10.9144 4.81877 11.6272C3.42074 14.2127 4.27908 17.4398 6.7769 18.9891C7.46547 19.4162 8.58009 19.7193 10.8093 20.3254Z"
                fill="white"
              />
              <path
                d="M77.0184 25.5562L74.7671 22.8546C74.2214 22.9911 73.621 23.0593 72.9661 23.0593C71.6153 23.0593 70.3873 22.7455 69.2821 22.1178C68.1906 21.4902 67.3242 20.6101 66.6829 19.4777C66.0552 18.3452 65.7414 17.0694 65.7414 15.6504C65.7414 14.2314 66.0552 12.9625 66.6829 11.8437C67.3242 10.7112 68.1906 9.83113 69.2821 9.2035C70.3873 8.57586 71.6153 8.26204 72.9661 8.26204C74.3169 8.26204 75.538 8.57586 76.6296 9.2035C77.7348 9.83113 78.6012 10.7112 79.2288 11.8437C79.8701 12.9625 80.1907 14.2314 80.1907 15.6504C80.1907 16.9739 79.9179 18.1746 79.3721 19.2525C78.8263 20.3168 78.0691 21.1764 77.1003 21.8313L80.5182 25.5562H77.0184ZM68.6886 15.6504C68.6886 16.6055 68.866 17.4447 69.2207 18.1678C69.5891 18.8773 70.094 19.4231 70.7352 19.8051C71.3765 20.1872 72.1201 20.3782 72.9661 20.3782C73.812 20.3782 74.5556 20.1872 75.1969 19.8051C75.8382 19.4231 76.3362 18.8773 76.691 18.1678C77.0594 17.4447 77.2436 16.6055 77.2436 15.6504C77.2436 14.6953 77.0594 13.863 76.691 13.1535C76.3362 12.4304 75.8382 11.8778 75.1969 11.4957C74.5556 11.1137 73.812 10.9227 72.9661 10.9227C72.1201 10.9227 71.3765 11.1137 70.7352 11.4957C70.094 11.8778 69.5891 12.4304 69.2207 13.1535C68.866 13.863 68.6886 14.6953 68.6886 15.6504ZM92.3895 11.5776V22.916H89.5038V20.6238C89.2036 21.3879 88.7056 21.9882 88.0097 22.4248C87.3275 22.8478 86.5361 23.0593 85.6356 23.0593C84.3258 23.0593 83.282 22.6295 82.5042 21.7699C81.7265 20.9103 81.3377 19.7096 81.3377 18.1678V11.5776H84.203V17.8403C84.203 18.7409 84.4349 19.4435 84.8988 19.9484C85.3627 20.4396 85.9904 20.6852 86.7817 20.6852C87.614 20.6852 88.2758 20.4191 88.767 19.887C89.2582 19.3549 89.5038 18.5908 89.5038 17.5947V11.5776H92.3895ZM98.636 11.4343C99.5911 11.4343 100.41 11.6595 101.092 12.1097C101.774 12.56 102.259 13.1672 102.545 13.9312V11.5776H105.41V22.916H102.545V20.5419C102.259 21.306 101.774 21.92 101.092 22.3839C100.41 22.8341 99.5911 23.0593 98.636 23.0593C97.6809 23.0593 96.8213 22.8273 96.0572 22.3634C95.2931 21.8995 94.6928 21.2309 94.2561 20.3577C93.8332 19.4708 93.6217 18.4339 93.6217 17.2468C93.6217 16.0598 93.8332 15.0296 94.2561 14.1564C94.6928 13.2695 95.2931 12.5941 96.0572 12.1302C96.8213 11.6663 97.6809 11.4343 98.636 11.4343ZM99.5365 13.9517C98.636 13.9517 97.9128 14.2451 97.367 14.8318C96.8213 15.4185 96.5484 16.2235 96.5484 17.2468C96.5484 18.2701 96.8213 19.0751 97.367 19.6619C97.9128 20.2349 98.636 20.5214 99.5365 20.5214C100.41 20.5214 101.126 20.2281 101.685 19.6414C102.259 19.041 102.545 18.2428 102.545 17.2468C102.545 16.2371 102.259 15.4389 101.685 14.8522C101.126 14.2519 100.41 13.9517 99.5365 13.9517ZM113.961 11.4139C115.271 11.4139 116.314 11.8437 117.092 12.7033C117.87 13.5628 118.259 14.7704 118.259 16.3258V22.916H115.394V16.6533C115.394 15.7528 115.162 15.0569 114.698 14.5657C114.234 14.0609 113.599 13.8084 112.794 13.8084C111.976 13.8084 111.321 14.0745 110.829 14.6066C110.338 15.1388 110.093 15.9028 110.093 16.8989V22.916H107.207V11.5776H110.093V13.8494C110.393 13.0853 110.884 12.4918 111.566 12.0688C112.262 11.6322 113.06 11.4139 113.961 11.4139ZM126.037 20.4396V22.916H124.523C123.254 22.916 122.278 22.609 121.596 21.995C120.928 21.381 120.593 20.3577 120.593 18.9251V14.0131H119.017V11.5776H120.593V8.7737H123.479V11.5776H126.017V14.0131H123.479V18.966C123.479 19.5118 123.588 19.8938 123.806 20.1121C124.025 20.3304 124.393 20.4396 124.912 20.4396H126.037ZM138.142 11.5776V22.916H135.257V20.6238C134.957 21.3879 134.458 21.9882 133.763 22.4248C133.08 22.8478 132.289 23.0593 131.389 23.0593C130.079 23.0593 129.035 22.6295 128.257 21.7699C127.479 20.9103 127.091 19.7096 127.091 18.1678V11.5776H129.956V17.8403C129.956 18.7409 130.188 19.4435 130.652 19.9484C131.116 20.4396 131.743 20.6852 132.535 20.6852C133.367 20.6852 134.029 20.4191 134.52 19.887C135.011 19.3549 135.257 18.5908 135.257 17.5947V11.5776H138.142ZM154.376 11.4139C155.755 11.4139 156.839 11.8437 157.631 12.7033C158.436 13.5492 158.838 14.7567 158.838 16.3258V22.916H155.973V16.6533C155.973 15.78 155.748 15.1115 155.297 14.6476C154.861 14.17 154.254 13.9312 153.476 13.9312C152.671 13.9312 152.03 14.1837 151.552 14.6885C151.075 15.1933 150.836 15.9301 150.836 16.8989V22.916H147.97V16.6533C147.97 15.78 147.745 15.1115 147.295 14.6476C146.858 14.17 146.251 13.9312 145.474 13.9312C144.669 13.9312 144.027 14.1837 143.55 14.6885C143.072 15.1933 142.833 15.9301 142.833 16.8989V22.916H139.948V11.5776H142.833V13.7266C143.134 12.9898 143.604 12.4235 144.246 12.0279C144.901 11.6185 145.658 11.4139 146.517 11.4139C147.432 11.4139 148.223 11.6322 148.891 12.0688C149.574 12.5054 150.085 13.1331 150.426 13.9517C150.781 13.174 151.307 12.56 152.002 12.1097C152.712 11.6458 153.503 11.4139 154.376 11.4139ZM75.2174 33.4872V35.0017H71.1446V47.916H69.2821V35.0017H65.2093V33.4872H75.2174ZM86.5857 41.6737C86.5857 42.0694 86.5584 42.4105 86.5038 42.6971H77.5191C77.56 43.9796 77.9216 44.9416 78.6038 45.5828C79.2996 46.2241 80.1456 46.5448 81.1416 46.5448C82.0422 46.5448 82.7926 46.3196 83.3929 45.8694C84.0069 45.4055 84.3822 44.7915 84.5186 44.0274H86.5038C86.3674 44.8051 86.0604 45.501 85.5828 46.115C85.1189 46.729 84.5118 47.2065 83.7613 47.5476C83.0109 47.8887 82.165 48.0593 81.2235 48.0593C80.1456 48.0593 79.1905 47.8273 78.3582 47.3634C77.5259 46.8995 76.871 46.2378 76.3934 45.3782C75.9295 44.5049 75.6976 43.4816 75.6976 42.3082C75.6976 41.1348 75.9295 40.1115 76.3934 39.2382C76.871 38.365 77.5259 37.6964 78.3582 37.2325C79.1905 36.7686 80.1456 36.5367 81.2235 36.5367C82.315 36.5367 83.2633 36.7686 84.0683 37.2325C84.887 37.6964 85.5078 38.3173 85.9308 39.095C86.3674 39.8727 86.5857 40.7323 86.5857 41.6737ZM84.7028 41.7965C84.7437 40.9642 84.6073 40.2684 84.2935 39.709C83.9796 39.1496 83.5498 38.7334 83.0041 38.4605C82.4583 38.1876 81.8648 38.0512 81.2235 38.0512C80.2002 38.0512 79.3406 38.3718 78.6447 39.0131C77.9489 39.6407 77.5736 40.5686 77.5191 41.7965H84.7028ZM93.1764 36.5367C94.609 36.5367 95.7961 36.9187 96.7375 37.6828C97.679 38.4469 98.2589 39.4702 98.4772 40.7528H96.5124C96.376 39.9477 96.0008 39.3201 95.3868 38.8698C94.7864 38.4059 94.036 38.174 93.1354 38.174C92.4805 38.174 91.8802 38.3241 91.3344 38.6242C90.8023 38.9244 90.3725 39.3883 90.045 40.016C89.7176 40.63 89.5538 41.394 89.5538 42.3082C89.5538 43.2224 89.7176 43.9933 90.045 44.6209C90.3725 45.2349 90.8023 45.692 91.3344 45.9922C91.8802 46.2923 92.4805 46.4424 93.1354 46.4424C94.036 46.4424 94.7864 46.2105 95.3868 45.7466C96.0008 45.2827 96.376 44.6482 96.5124 43.8432H98.4772C98.2589 45.1394 97.679 46.1695 96.7375 46.9336C95.7961 47.6841 94.609 48.0593 93.1764 48.0593C92.0985 48.0593 91.1434 47.8273 90.3111 47.3634C89.4788 46.8995 88.8238 46.2378 88.3463 45.3782C87.8824 44.5049 87.6504 43.4816 87.6504 42.3082C87.6504 41.1348 87.8824 40.1115 88.3463 39.2382C88.8238 38.365 89.4788 37.6964 90.3111 37.2325C91.1434 36.7686 92.0985 36.5367 93.1764 36.5367ZM106.011 36.4957C107.321 36.4957 108.378 36.9187 109.183 37.7647C109.988 38.597 110.391 39.8045 110.391 41.3872V47.916H108.528V41.5509C108.528 40.4321 108.242 39.5725 107.669 38.9722C107.095 38.3718 106.318 38.0717 105.335 38.0717C104.312 38.0717 103.493 38.4059 102.879 39.0745C102.265 39.7294 101.958 40.6914 101.958 41.9603V47.916H100.096V32.7708H101.958V39.3406C102.245 38.4264 102.75 37.7237 103.473 37.2325C104.21 36.7413 105.056 36.4957 106.011 36.4957Z"
                fill="white"
              />
            </svg>
          </div>
          <nav className="header__nav">
            <div className="header__link hoverUnderline" onClick={handleAboutLinkClick}>
              About Us
            </div>
            <div className="header__link hoverUnderline" onClick={handleDevelopmentLinkClick}>
              Development
            </div>
            <div className="header__link hoverUnderline" onClick={handleMarketingLinkClick}>
              Marketing
            </div>
            <div className="header__link hoverUnderline" onClick={handleConsultationsLinkClick}>
              Consultations
            </div>
            <div className="header__button buttonHover" onClick={handleContactLinkClick}>
              Contact us
            </div>
          </nav>
          <div
            onClick={() => setMenuVisibility(!isMenuVisible)}
            className={classNames("header__menu", { menuIconTrasform: isMenuVisible })}
          >
            <div className="header__menu__line"></div>
            <div className="header__menu__line"></div>
            <div className="header__menu__line"></div>
          </div>
        </div>
      </header>
      <div className={classNames("menu", { menuVisible: isMenuVisible })} ref={menuRef}>
        <div className="header__link" onClick={handleAboutLinkClick}>
          About Us
        </div>
        <div className="header__link" onClick={handleDevelopmentLinkClick}>
          Development
        </div>
        <div className="header__link" onClick={handleMarketingLinkClick}>
          Marketing
        </div>
        <div className="header__link" onClick={handleConsultationsLinkClick}>
          Consultations
        </div>
        <div className="header__button buttonHover" onClick={handleContactLinkClick}>
          Contact us
        </div>
      </div>
    </>
  );
});
